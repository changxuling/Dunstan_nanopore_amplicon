import json
from pathlib import Path


# =====================================
# Workflow config items
configfile: "config/config.yaml"


WORKFLOW = Path("workflow").resolve()
RULES = WORKFLOW / "rules"
ENVS = WORKFLOW / "envs"
SCRIPTS = WORKFLOW / "scripts"
RESULTS = Path("results").resolve()
PLOTS = RESULTS / "plots"
TABLES = RESULTS / "tables"
CAPTIONS = WORKFLOW / "report"
RESOURCES = Path("resources").resolve()
LOGS = Path("logs/rules").resolve()
CONTAINERS = config["containers"]
GB = 1_024
GUPPY_VERSION = CONTAINERS["guppy"].split(":")[-1]

# =====================================

with open(config["samplesheet"]) as fp:
    sample_data = json.load(fp)

RUNS = sample_data["runs"]
# =====================================
target_files = set()
EXPERIMENTS = set()
for run, info in RUNS.items():
    run_dir = info["run_dir"]
    if not run_dir:
        continue
    for sample in info["samples"]:
        p = RESULTS / f"QC/plots/{run}"
        target_files.add(p)
        if "-" in sample:
            uid = sample.split("-", maxsplit=1)[1]
            exp = f"{run}_{uid}"
        elif sample == "Pool16":
            exp = f"{run}_{sample}"
        else:
            exp = f"{run}_Pool1-3"
        EXPERIMENTS.add(exp)
        target_files.add(RESULTS / f"depth/{exp}.depth.tsv")

target_files.add(RESULTS / "reports/tbprofiler")

# =====================================
rule all:
    input:
        target_files,


# =====================================
include: RULES / "common.smk"
include: RULES / "basecall.smk"
include: RULES / "qc.smk"
include: RULES / "amr.smk"
